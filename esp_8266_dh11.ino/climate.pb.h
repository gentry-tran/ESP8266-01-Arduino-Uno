/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_CLIMATE_PB_H_INCLUDED
#define PB_CLIMATE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _TempEvent { 
    int32_t deviceId; 
    float humidity; 
    float temperature; 
} TempEvent;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define TempEvent_init_default                   {0, 0, 0}
#define TempEvent_init_zero                      {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define TempEvent_deviceId_tag                   1
#define TempEvent_humidity_tag                   2
#define TempEvent_temperature_tag                3

/* Struct field encoding specification for nanopb */
#define TempEvent_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    deviceId,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       3)
#define TempEvent_CALLBACK NULL
#define TempEvent_DEFAULT NULL

extern const pb_msgdesc_t TempEvent_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define TempEvent_fields &TempEvent_msg

/* Maximum encoded size of messages (where known) */
#define TempEvent_size                           21

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
